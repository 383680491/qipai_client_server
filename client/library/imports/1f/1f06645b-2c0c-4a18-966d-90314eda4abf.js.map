{"version":3,"sources":["..\\..\\..\\..\\assets\\scripts/assets\\scripts\\VoiceMgr.js"],"names":["radix","base","crypto","value","h","Math","floor","l","String","fromCharCode","encodermap","decodermap","i","code","v","encode","data","content","len","length","a","b","c","d","getCode","index","charCodeAt","charAt","decode","newData","Uint8Array","cnt","cc","Class","extends","Component","properties","onPlayCallback","_voiceMediaPath","_Time","init","prepare","stopRecord","state","upLoadFile","upLoadUrl","url","playFromUrl","getVoiceLevel","maxLevel","stop"],"mappings":"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","file":"VoiceMgr.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["var radix = 12;\r\nvar base = 128 - radix;\r\nfunction crypto(value){\r\n    value -= base;\r\n    var h = Math.floor(value/radix) + base;\r\n    var l = value%radix + base;\r\n    return String.fromCharCode(h) + String.fromCharCode(l);\r\n}\r\n\r\nvar encodermap = {}\r\nvar decodermap = {}\r\nfor(var i = 0; i < 256; ++i){\r\n    var code = null;\r\n    var v = i + 1;\r\n    if(v >= base){\r\n        code = crypto(v);\r\n    }\r\n    else{\r\n        code = String.fromCharCode(v);    \r\n    }\r\n    \r\n    encodermap[i] = code;\r\n    decodermap[code] = i;\r\n}\r\n\r\nfunction encode(data){\r\n    var content = \"\";\r\n    var len = data.length;\r\n    var a = (len >> 24) & 0xff;\r\n    var b = (len >> 16) & 0xff;\r\n    var c = (len >> 8) & 0xff;\r\n    var d = len & 0xff;\r\n    content += encodermap[a];\r\n    content += encodermap[b];\r\n    content += encodermap[c];\r\n    content += encodermap[d];\r\n    for(var i = 0; i < data.length; ++i){\r\n        content += encodermap[data[i]];\r\n    }\r\n    return content;\r\n}\r\n\r\nfunction getCode(content,index){\r\n    var c = content.charCodeAt(index);\r\n    if(c >= base){\r\n        c = content.charAt(index) + content.charAt(index + 1);\r\n    }\r\n    else{\r\n        c = content.charAt(index);\r\n    }\r\n    return c;\r\n}\r\nfunction decode(content){\r\n    var index = 0;\r\n    var len = 0;\r\n    for(var i = 0; i < 4; ++i){\r\n        var c = getCode(content,index);\r\n        index += c.length;\r\n        var v = decodermap[c];\r\n        len |= v << (3-i)*8;\r\n    }\r\n    \r\n    var newData = new Uint8Array(len);\r\n    var cnt = 0;\r\n    while(index < content.length){\r\n        var c = getCode(content,index);\r\n        index += c.length;\r\n        newData[cnt] = decodermap[c];\r\n        cnt++;\r\n    }\r\n    return newData;\r\n}\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,      // The default value will be used only when the component attaching\r\n        //                           to a node for the first time\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n        onPlayCallback:null,\r\n        _voiceMediaPath:null,\r\n        _Time:null,\r\n    },\r\n\r\n    // use this for initialization\r\n    init: function () {\r\n        \r\n    },\r\n    \r\n    prepare:function(){\r\n        \r\n    },\r\n    \r\n    stopRecord:function(state){\r\n        \r\n    },\r\n\r\n    upLoadFile:function(){\r\n        \r\n    },\r\n\r\n    upLoadUrl:function(url){\r\n        \r\n    },\r\n\r\n    playFromUrl:function(url){\r\n        \r\n    },\r\n    \r\n    getVoiceLevel:function(maxLevel){\r\n        \r\n    },\r\n    stop:function(){\r\n        \r\n    },\r\n});\r\n"]}