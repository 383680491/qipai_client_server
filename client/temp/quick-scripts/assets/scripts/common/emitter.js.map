{"version":3,"sources":["emitter.js"],"names":["module","exports","Emitter","obj","mixin","key","prototype","on","addEventListener","event","fn","_callbacks","push","once","self","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","length","callbacks","cb","i","splice","emit","args","slice","call","len","listeners","hasListeners"],"mappings":"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","file":"emitter.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\scripts\\common","sourcesContent":["module.exports = Emitter;\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n将Emitter.prototype里面的所有属性都整合到obj\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n添加监听事件\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks[event] = this._callbacks[event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n添加事件，该事件只被触发一次，触发后会被移除\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  var self = this;\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  function on() {\r\n    self.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n移除监听事件，当不传参数时，所有事件都会被移除\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks[event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks[event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n发送事件，当发送该事件时会触发相应的监听的回调函数\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  var args = [].slice.call(arguments, 1)\r\n    , callbacks = this._callbacks[event];\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n返回所有监听事件\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks[event] || [];\r\n};\r\n\r\n/**\r\n返回监听事件的个数\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n"]}