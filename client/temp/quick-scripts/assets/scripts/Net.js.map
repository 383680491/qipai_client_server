{"version":3,"sources":["Net.js"],"names":["window","io","require","deepCopy","source","console","log","result","key","Global","cc","Class","extends","Component","statics","ctor","ip","sio","isPinging","isReconnect","fnDisconnect","handlers","isExit","addHandler","event","fn","handler","data","JSON","parse","on","removeAllHandler","off","connect","fnConnect","fnError","self","opts","connected","close","value","startHearbeat","lastRecieveTime","Date","now","delayMS","lastSendTime","game","EVENT_HIDE","ping","setInterval","bind","send","stringify","emit","disconnect","test","fnResult","xhr","ret","isonline","arr","split","account","vv","userMgr","sign","serverType","port","http","sendRequest","setTimeout","abort"],"mappings":"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","file":"Net.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["if(window.io == null){\r\n    window.io = require(\"socket-io\");\r\n}\r\n\r\nvar deepCopy= function(source) { \r\n    console.log(\"source:\");\r\n    console.log(source);\r\n    var result={};\r\n    for (var key in source) {\r\n      //result[key] = (typeof source[key] === 'object' ? deepCopy(source[key]) : source[key]);\r\n        console.log(\"source[key]:\");\r\n        console.log(\"key:\"+key);\r\n        if (typeof(source[key]) === 'object') {\r\n            console.log(\"11111111111111111\");\r\n            result[key]=deepCopy(source[key]);\r\n        }\r\n        else{\r\n            console.log(\"22222222222222222222222222\");\r\n            result[key] = source[key];\r\n        }\r\n    }\r\n    console.log(\"result:\");\r\n    console.log(result);\r\n    return result; \r\n}\r\n\r\n// var deepCopy = function(obj){\r\n//     console.log(\"obj : \");\r\n//     if(typeof obj != 'object'){\r\n//         return obj;\r\n//     }\r\n//     var newobj = {};\r\n//     for ( var key in obj) {\r\n//         newobj[key] = deepCopy(obj[key]);\r\n//         console.log(\"newobj[key]\");\r\n//         console.log(newobj[key]);\r\n//     }\r\n//     return newobj;\r\n// }\r\n\r\nvar Global = cc.Class({\r\n    extends: cc.Component,\r\n    statics: {  \r\n    },\r\n \r\n    ctor: function () {\r\n        console.log(\"Net ctor\");\r\n        this.ip=\"\";\r\n        this.sio=null;\r\n        this.isPinging=false;\r\n        this.isReconnect=true;\r\n        this.fnDisconnect=null;\r\n        this.handlers={};\r\n        this.isExit = false;\r\n        console.log(\"window.io:\");\r\n        console.log(window.io);\r\n        //this.io = require(\"socket-io\");\r\n        //this.io = deepCopy(window.io);\r\n        console.log(\"this.io:\");\r\n        console.log(this.io);\r\n    },\r\n    addHandler:function(event,fn){\r\n        if(this.handlers[event]){\r\n            console.log(\"event:\" + event + \"' handler has been registered.\");\r\n            return;\r\n        }\r\n\r\n            var handler = function(data){\r\n                //console.log(event + \"(\" + typeof(data) + \"):\" + (data? data.toString():\"null\"));\r\n                if(event != \"disconnect\" && typeof(data) == \"string\"){\r\n                    data = JSON.parse(data);\r\n                }\r\n                fn(data);\r\n            };\r\n            \r\n            this.handlers[event] = handler; \r\n            if(this.sio){\r\n                console.log(\"register:function \" + event);\r\n                this.sio.on(event,handler);\r\n            }\r\n        },\r\n\r\n        removeAllHandler:function(){\r\n            this.handlers = {};\r\n            if (this.sio) {\r\n                this.sio.off();\r\n            }\r\n        },\r\n\r\n    connect:function(fnConnect,fnError) {\r\n        var self = this;\r\n        this.isExit = false;\r\n        var opts = {\r\n            'reconnection':false,\r\n            'force new connection': true,\r\n            'transports':['websocket', 'polling']\r\n        }\r\n        console.log(\"this.io:\"+this.io);\r\n        //this.sio = this.io.connect(this.ip,opts);\r\n        console.log(\"this.sio:\"+this.sio);\r\n        this.sio = window.io.connect(this.ip,opts);\r\n        this.sio.on('reconnect',function(){\r\n            console.log('reconnection');\r\n        });\r\n        this.sio.on('connect',function(data){\r\n            console.log(\"connect\");\r\n            self.sio.connected = true;\r\n            fnConnect(data);\r\n        });\r\n        this.sio.on('disconnect',function(data){\r\n            console.log(\"disconnect\");\r\n            self.sio.connected = false;\r\n            self.close();\r\n        });\r\n        this.sio.on('connect_failed',function (){\r\n            console.log('connect_failed');\r\n        });\r\n        for(var key in this.handlers){\r\n            var value = this.handlers[key];\r\n            if(typeof(value) == \"function\"){\r\n                if(key == 'disconnect'){\r\n                    this.fnDisconnect = value;\r\n                }\r\n                else{\r\n                    console.log(\"register:function \" + key);\r\n                    this.sio.on(key,value);                        \r\n                }\r\n            }\r\n        }\r\n        this.startHearbeat();\r\n    },\r\n    \r\n    startHearbeat:function(){\r\n        this.sio.on('game_pong',function(){\r\n            self.lastRecieveTime = Date.now();\r\n            self.delayMS = self.lastRecieveTime - self.lastSendTime;\r\n            console.log(self.delayMS);\r\n        });\r\n        this.lastRecieveTime = Date.now();\r\n        var self = this;\r\n        console.log(1);\r\n        if(!self.isPinging){\r\n            self.isPinging = true;\r\n            cc.game.on(cc.game.EVENT_HIDE,function(){\r\n                self.ping();\r\n            });\r\n\r\n            setInterval(function(){\r\n                if(self.sio){\r\n                    self.ping();                \r\n                }\r\n            }.bind(this),5000);\r\n            setInterval(function(){\r\n                if(self.sio){\r\n                    if(Date.now() - self.lastRecieveTime > 200000){\r\n                        //self.close();\r\n                    }         \r\n                }\r\n            }.bind(this),500);\r\n        }   \r\n    },\r\n    send:function(event,data){\r\n        if(this.sio&&this.sio.connected){\r\n            if(data != null && (typeof(data) == \"object\")){\r\n                data = JSON.stringify(data);\r\n                //console.log(data);              \r\n            }\r\n            this.sio.emit(event,data);\r\n        }\r\n    },\r\n\r\n    ping:function(){\r\n        if(this.sio && !this.isExit){\r\n            console.log('this.lastSendTime'+ this.lastSendTime);\r\n            this.lastSendTime = Date.now();\r\n            this.send('game_ping');\r\n        }\r\n    },\r\n    \r\n    close:function(){\r\n    \tconsole.log('close00000');\r\n        this.delayMS = null;\r\n        if(this.sio && this.sio.connected){\r\n            this.sio.connected = false;\r\n            this.sio.disconnect();\r\n        }\r\n        this.sio = null;\r\n        if(this.fnDisconnect){\r\n            this.fnDisconnect();\r\n            this.fnDisconnect = null;\r\n        }\r\n    },\r\n    \r\n    test:function(fnResult){\r\n        var xhr = null;\r\n        var fn = function(ret){\r\n            fnResult(ret.isonline);\r\n            xhr = null;\r\n        }\r\n        \r\n        var arr = this.ip.split(':');\r\n        var data = {\r\n            account:cc.vv.userMgr.account,\r\n            sign:cc.vv.userMgr.sign,\r\n            serverType:cc.vv.userMgr.serverType,\r\n            ip:arr[0],\r\n            port:arr[1],\r\n        }\r\n        xhr = cc.vv.http.sendRequest(\"/is_server_online\",data,fn);\r\n        setTimeout(function(){\r\n            if(xhr){\r\n                xhr.abort();\r\n                fnResult(false);                    \r\n            }\r\n        },1500);\r\n        /*\r\n        var opts = {\r\n            'reconnection':false,\r\n            'force new connection': true,\r\n            'transports':['websocket', 'polling']\r\n        }\r\n        var self = this;\r\n        this.testsio = window.io.connect(this.ip,opts);\r\n        this.testsio.on('connect',function(){\r\n            console.log('connect');\r\n            self.testsio.close();\r\n            self.testsio = null;\r\n            fnResult(true);\r\n        });\r\n        this.testsio.on('connect_error',function(){\r\n            console.log('connect_failed');\r\n            self.testsio = null;\r\n            fnResult(false);\r\n        });\r\n        */\r\n    }\r\n});"]}