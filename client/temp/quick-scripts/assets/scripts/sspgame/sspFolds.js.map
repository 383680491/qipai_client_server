{"version":3,"sources":["sspFolds.js"],"names":["cc","Class","extends","Component","properties","_folds","_anims","onLoad","vv","initView","initEventHandler","initAllFolds","game","node","getChildByName","sides","i","length","sideName","sideRoot","folds","foldRoot","j","children","n","active","sprite","getComponent","Sprite","spriteFrame","moveUp","moveBy","p","moveDown","seq","sequence","runAction","repeatForever","push","hideAllFolds","prompts","promptName","find","promptM","promptR","promptU","promptL","k","f","self","on","data","reset","initFolds","detail","seats","sspNetMgr","childrenCount","seatData","tempIndex","getLocalIndexByIndex","seatindex","localIndex","getShowIndexByIndex","pre","SSPMgr","getFoldPre","side","getSide","foldsSprites","index","setSpriteFrameByPai","lastSprite","prompt","x","y","setPosition","pai","getSpriteFrameByPai"],"mappings":"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","file":"sspFolds.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\scripts\\sspgame","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n        _folds:null,\r\n        _anims:null,\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        if(cc.vv == null){\r\n            return;\r\n        }\r\n        \r\n        this.initView();\r\n        this.initEventHandler();\r\n        this.initAllFolds();\r\n    },\r\n    \r\n    initView:function(){\r\n        this._folds = {};\r\n        var game = this.node.getChildByName(\"game\");\r\n        var sides = [\"myself\",\"right\",\"up\",\"left\"];\r\n        for(var i = 0; i < sides.length; ++i){\r\n            var sideName = sides[i];\r\n            var sideRoot = game.getChildByName(sideName);\r\n            var folds = [];\r\n            var foldRoot = sideRoot.getChildByName(\"folds\");\r\n            for(var j = 0; j < foldRoot.children.length; ++j){\r\n                var n = foldRoot.children[j];\r\n                n.active = false;\r\n                var sprite = n.getComponent(cc.Sprite); \r\n                if (j != foldRoot.children.length-1) {\r\n                    sprite.spriteFrame = null; \r\n                } \r\n                else {\r\n                    sprite.node.active = true;\r\n                    var moveUp = cc.moveBy(1,cc.p(0,10));\r\n                    var moveDown = cc.moveBy(1,cc.p(0,-10));\r\n                    var seq = cc.sequence(moveUp,moveDown);\r\n                    sprite.node.runAction(cc.repeatForever(seq));\r\n                }\r\n                folds.push(sprite);            \r\n            }\r\n            this._folds[sideName] = folds; \r\n        }\r\n        \r\n        this.hideAllFolds();\r\n        var prompts = [\"promptM\",\"promptR\",\"promptU\",\"promptL\"];\r\n        for(var j = 0; j < 4; j++){\r\n            var promptName = prompts[j];\r\n            var n = cc.find(\"Canvas/game/\" + promptName);\r\n            n.active = false;\r\n            var sprite = n.getComponent(cc.Sprite); \r\n            sprite.node.active = true;\r\n            var moveUp = cc.moveBy(1,cc.p(0,10));\r\n            var moveDown = cc.moveBy(1,cc.p(0,-10));\r\n            var seq = cc.sequence(moveUp,moveDown);\r\n            sprite.node.runAction(cc.repeatForever(seq));\r\n\r\n            if(j == 0){\r\n                this.promptM = sprite;\r\n            }\r\n            else if(j == 1){\r\n                this.promptR = sprite;\r\n            }    \r\n            else if(j == 2){\r\n                this.promptU = sprite;\r\n            } \r\n            else if(j == 3){\r\n                this.promptL = sprite;\r\n            }     \r\n        }\r\n\r\n    },\r\n    \r\n    hideAllFolds:function(){\r\n        for(var k in this._folds){\r\n            var f = this._folds[i];\r\n            for(var i in f){\r\n                f[i].node.active = false;\r\n            }\r\n        }\r\n    },\r\n    \r\n    initEventHandler:function(){\r\n        var self = this;\r\n        this.node.on('game_begin',function(data){\r\n            self.reset();\r\n            self.initAllFolds();\r\n        });  \r\n        \r\n        this.node.on('game_sync',function(data){\r\n            self.initAllFolds();\r\n        });\r\n        \r\n        this.node.on('game_chupai_notify',function(data){\r\n            self.initFolds(data.detail);\r\n        });\r\n        \r\n        this.node.on('fold_notify',function(data){\r\n            self.initFolds(data.detail);\r\n        });\r\n    },\r\n    \r\n    initAllFolds:function(){\r\n        var seats = cc.vv.sspNetMgr.seats;\r\n        for(var i in seats){\r\n            this.initFolds(seats[i]);\r\n        }\r\n    },\r\n\r\n    reset:function() {\r\n        var sides = [\"myself\",\"right\",\"up\",\"left\"];\r\n        for(let i = 0; i < sides.length; ++i){\r\n            var sideName = sides[i];\r\n            var game = this.node.getChildByName(\"game\");\r\n            var sideRoot = game.getChildByName(sideName);\r\n            var foldRoot = sideRoot.getChildByName(\"folds\");\r\n            for (let j = 0; j < foldRoot.childrenCount; j++) {\r\n                let n = foldRoot.children[j];\r\n                n.active = false;\r\n            }            \r\n        }\r\n    },\r\n    \r\n    initFolds:function(seatData){\r\n        var folds = seatData.folds;\r\n        if(folds == null){\r\n            return;\r\n        }\r\n\r\n        var sides = [\"myself\",\"right\",\"up\",\"left\"];\r\n        for(var i = 0; i < sides.length; ++i){\r\n            var sideName = sides[i];\r\n            var game = this.node.getChildByName(\"game\");\r\n            var sideRoot = game.getChildByName(sideName);\r\n            var foldRoot = sideRoot.getChildByName(\"folds\");\r\n            var n = foldRoot.getChildByName(\"prompt\");\r\n            n.active = false;\r\n        }\r\n\r\n        var prompts = [\"promptM\",\"promptR\",\"promptU\",\"promptL\"];\r\n        for(var j = 0; j < 4; j++){\r\n            var promptName = prompts[j];\r\n            cc.find(\"Canvas/game/\" + promptName).active = false;\r\n        }\r\n\r\n        var tempIndex = cc.vv.sspNetMgr.getLocalIndexByIndex(seatData.seatindex);\r\n        var localIndex = cc.vv.sspNetMgr.getShowIndexByIndex(tempIndex);\r\n        var pre = cc.vv.SSPMgr.getFoldPre(localIndex);\r\n        var side = cc.vv.SSPMgr.getSide(localIndex);\r\n        \r\n        var foldsSprites = this._folds[side];\r\n        for(var i = 0; i < foldsSprites.length-1; ++i){\r\n            var index = i;\r\n            if(side == \"right\"){\r\n                index = foldsSprites.length - i - 2;\r\n            }\r\n            var sprite = foldsSprites[index];\r\n            sprite.node.active = true;\r\n            if(!folds[i]){\r\n                continue;\r\n            }\r\n            this.setSpriteFrameByPai(pre,sprite,folds[i]);\r\n        }\r\n\r\n        if (folds.length > 0) {\r\n            var index = folds.length - 1;\r\n            if(side == \"right\"){\r\n                index = foldsSprites.length - folds.length - 1;\r\n            }\r\n            var lastSprite = foldsSprites[index];\r\n            var prompt = foldsSprites[foldsSprites.length-1];\r\n            prompt.node.active = true;\r\n            var x = lastSprite.node.x;\r\n            if (side === 'right' || side === 'left') {\r\n                var y = lastSprite.node.y;\r\n            }\r\n            else {\r\n                var y = lastSprite.node.y;\r\n            }\r\n            prompt.node.setPosition(x,y);\r\n        }\r\n\r\n        for(var i = folds.length; i < foldsSprites.length-1; ++i){\r\n            var index = i;\r\n            if(side == \"right\"){\r\n                index = foldsSprites.length - i - 2;\r\n            }\r\n            var sprite = foldsSprites[index];\r\n            \r\n            sprite.spriteFrame = null;\r\n            sprite.node.active = false;\r\n        }  \r\n    },\r\n    \r\n    setSpriteFrameByPai:function(pre,sprite,pai){\r\n        sprite.spriteFrame = cc.vv.SSPMgr.getSpriteFrameByPai(pre,pai);\r\n        sprite.node.active = true;\r\n    },\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n\r\n    // },\r\n});\r\n"]}