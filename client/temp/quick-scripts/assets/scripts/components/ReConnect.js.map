{"version":3,"sources":["ReConnect.js"],"names":["cc","Class","extends","Component","properties","_reconnect","_lblTip","_loading_image","_lastPing","onLoad","find","getChildByName","self","fnTestServerOn","netObjs","SSS_SERVER_TYPE","vv","sssNet","SSP_SERVER_TYPE","sspNet","netMgrObjs","sssNetMgr","sspNetMgr","gameType","userMgr","serverType","net","netMgr","test","ret","roomId","oldRoomId","enterRoom","errcode","emitter","emit","director","loadScene","setTimeout","fn","data","node","off","active","loginFinished","on","removeHandler","update","dt","rotation"],"mappings":"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","file":"ReConnect.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\scripts\\components","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,      // The default value will be used only when the component attaching\r\n        //                           to a node for the first time\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n        _reconnect: null,\r\n        _lblTip: null,\r\n        _loading_image: null,\r\n        _lastPing: 0,\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        this._reconnect = cc.find(\"Canvas/reconnect\");\r\n        this._loading_image = this._reconnect.getChildByName(\"loading_image\");\r\n        var self = this;\r\n\r\n        var fnTestServerOn = function () {\r\n            var netObjs = {\r\n                SSS_SERVER_TYPE: cc.vv.sssNet,\r\n                SSP_SERVER_TYPE: cc.vv.sspNet,\r\n            };\r\n            var netMgrObjs = {\r\n                SSS_SERVER_TYPE: cc.vv.sssNetMgr,\r\n                SSP_SERVER_TYPE: cc.vv.sspNetMgr,\r\n            };\r\n            var gameType = cc.vv.userMgr.serverType;\r\n            var net = netObjs[gameType];\r\n            var netMgr = netMgrObjs[gameType];\r\n\r\n            net.test(function (ret) {\r\n                if (ret) {\r\n                    var roomId = netMgr.roomId;\r\n                    if (roomId != null) {\r\n                        cc.vv.userMgr.oldRoomId = null;\r\n                        cc.vv.userMgr.enterRoom(roomId, function (ret) {\r\n                            if (ret.errcode != 0) {\r\n                                netMgr.roomId = null;\r\n                                cc.vv.emitter.emit('remove_handler');\r\n                                cc.director.loadScene('hall');\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                else {\r\n                    setTimeout(fnTestServerOn, 3000);\r\n                }\r\n            });\r\n        };\r\n\r\n        var fn = function (data) {\r\n            self.node.off('disconnect', fn);\r\n            self._reconnect.active = true;\r\n\r\n            fnTestServerOn();\r\n        };\r\n\r\n        var loginFinished = function (data) {\r\n            if(self._reconnect){\r\n                self._reconnect.active = false;\r\n                self.node.on('disconnect', fn);\r\n            }\r\n        };\r\n\r\n        var removeHandler = function (data) {\r\n            cc.vv.emitter.off('login_finished');\r\n            cc.vv.emitter.off('remove_handler');\r\n            cc.vv.emitter.off('disconnect');\r\n        };\r\n\r\n        this.node.on('login_finished', function () {\r\n            //没有进来\r\n            self._reconnect.active = false;\r\n            self.node.on('disconnect', fn);\r\n        });\r\n        this.node.on('disconnect', fn);\r\n\r\n        var gameType = cc.vv.userMgr.serverType;\r\n        if('SSS_SERVER_TYPE' === gameType){\r\n            cc.vv.emitter.on('login_finished', loginFinished);\r\n            cc.vv.emitter.on('remove_handler', removeHandler);\r\n            cc.vv.emitter.on('disconnect', fn);\r\n        }\r\n    },\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    update: function (dt) {\r\n        if (this._reconnect.active) {\r\n            this._loading_image.rotation = this._loading_image.rotation - dt * 45;\r\n        }\r\n    },\r\n});\r\n"]}